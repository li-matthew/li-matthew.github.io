{"version":3,"sources":["Home.js","Skills.js","media/purdue.svg","media/MatthewLi-r.pdf","About.js","media/sandwichtime.png","media/schedule.png","media/spotify.png","media/todo.png","Projects.js","Interests.js","Contact.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","homeBox","justifyContent","flexDirection","alignItems","height","position","minWidth","minHeight","divider","backgroundColor","width","margin","toolBar","marginTop","bottom","display","textAlign","tabButton","padding","paddingTop","paddingBottom","fontSize","fontFamily","transition","color","sticky","top","zIndex","list","subtext","title","tabs","label","href","Home","React","useState","stick","setStick","offset","window","innerHeight","useEffect","addEventListener","handleScroll","removeEventListener","pageYOffset","Fragment","Box","className","overflow","id","bgcolor","Typography","variant","Divider","ButtonBase","disableRipple","to","smooth","map","skillBox","maxHeight","skillItem","fontWeight","container","mainGrid","skillTitle","otherGrid","paddingLeft","paddingRight","Skills","Container","Grid","spacing","justify","item","xs","aboutBox","gridTitle","grid","image","links","resume","marginRight","About","Button","size","startIcon","viewResume","target","IconButton","src","purdueImage","projectBox","cardImage","float","dialogImage","Projects","projectOne","setProjectOne","projectTwo","setProjectTwo","projectThree","setProjectThree","projectFour","setProjectFour","handleClose","handleProjectOne","handleProjectTwo","handleProjectThree","handleProjectFour","Card","CardMedia","sandwichtime","CardContent","gutterBottom","component","CardActions","onClick","schedule","spotify","todo","Dialog","onClose","open","maxWidth","DialogTitle","DialogContent","DialogActions","interestBox","Interests","contactBox","contactForm","submit","input","snack","boxShadow","Contact","setOpen","handleSubmit","event","reason","TextField","fullWidth","required","InputProps","multiline","rows","type","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","TransitionComponent","Grow","SnackbarContent","message","theme","createMuiTheme","palette","primary","main","secondary","typography","overrides","MuiButton","root","textTransform","MuiTextField","borderColor","borderWidth","MuiInputLabel","MuiSnackbarContent","MuiDialogActions","MuiCard","App","props","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9524374f.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\nimport { Typography, makeStyles, Box, Divider, ButtonBase } from '@material-ui/core'\nimport { Link } from 'react-scroll'\n\n\nconst useStyles = makeStyles(() => ({\n    homeBox: {\n        justifyContent: 'center',\n        flexDirection: 'column',\n        alignItems: 'center',\n        height: '100vh',\n        position: 'relative',\n        minWidth: 750,\n        minHeight: 400,\n    },\n    divider: {\n        backgroundColor: '#A6B1E1',\n        width: '25%',\n        margin: 10,\n        height: 2\n    },\n    toolBar: {\n        marginTop: 100,\n        position: 'absolute',\n        bottom: 0,\n        display: 'block',\n        width: '100%',\n        backgroundColor: '#424874',\n        textAlign: 'center',\n        minWidth: 750\n        // transition: 'transform 0.5s',\n    },\n    tabButton: {\n        padding: 20,\n        paddingTop: 5,\n        paddingBottom: 5,\n        fontSize: 16,\n        fontFamily: 'Nunito',\n        transition: '0.5s',\n        color: 'white',\n        '&:hover': {\n            color: '#A6B1E1',\n            transition: '0.5s'\n        }\n    },\n    sticky: {\n        position: 'fixed',\n        top: 0,\n        backgroundColor: '#424874',\n        width: '100%',\n        textAlign: 'center',\n        zIndex: 100,\n        minWidth: 750\n        // transition: 'transform 0.5s',\n        // '&:hover': {\n        //     transform: 'scaleY(1.1)',\n        //     transition: '0.5s'\n        // }\n    },\n    list: {\n        padding: 0,\n        transition: '0.5s'\n    },\n    subtext: {\n        color: 'white',\n        paddingTop: 15\n    },\n    title: {\n        color: 'white',\n    }\n}));\n\nconst tabs = [\n    {\n        label: \"about\",\n        href: \"/about\",\n    },\n    {\n        label: \"skills\",\n        href: \"/skills\",\n    },\n    {\n        label: \"projects\",\n        href: \"/projects\",\n    },\n    {\n        label: \"interests\",\n        href: \"/interests\",\n    },\n    {\n        label: \"contact\",\n        href: \"/contact\"\n    }\n];\n\nconst Home = () => {\n    const { homeBox, divider, toolBar, tabButton, sticky, list, subtext, title } = useStyles();\n    const [stick, setStick] = React.useState(false);\n    const offset = window.innerHeight - 64\n\n\n    useEffect(() => {\n        window.addEventListener('scroll', handleScroll)\n        return () => {\n            window.removeEventListener('scroll', handleScroll);\n        }\n    })\n\n    const handleScroll = () => {\n        if (window.pageYOffset >= offset) {\n            if (!stick) {\n                setStick(true);\n                // tabs.unshift(\n                //     {\n                //         label: \"home\",\n                //         href: \"\",\n                //     }\n                // );\n            }\n        } else {\n            if (stick) {\n                setStick(false);\n                // tabs.shift();\n            }\n        }\n    }\n\n    const getTabs = () => {\n        return tabs.map(({ label, href }) => {\n            return (\n                // <ButtonBase\n                //     {...{\n                //         key: label,\n                //         color: \"inherit\",\n                //         className: tabButton,\n                //         disableRipple: true\n                //     }}\n                // >\n                //     {/* <Link\n                // to=\"aboutBox\"> */}\n                //     {label}\n                //     {/* </Link> */}\n                // </ButtonBase>\n                <ButtonBase\n                    key={label}\n                    disableRipple={true}>\n                    <Link\n                        className={tabButton}\n                        // activeClass={active}\n                        to={label}\n                        // spy={true}\n                        smooth='easeInOutQuart'>\n                        {label}\n                    </Link>\n                </ButtonBase>\n            );\n        })\n    }\n\n    const main = () => {\n        return (\n            <Box display='flex' className={homeBox} overflow='visible' id='home' bgcolor='primary.main'>\n                <Typography variant='h1' className={title}>Matthew Li</Typography>\n                <Divider className={divider} />\n                <Typography variant='h4' className={subtext}>software engineer</Typography>\n                <div className={stick ? sticky : toolBar}>\n                    <nav>\n                        <ul className={list}>\n                            <ButtonBase\n                                key='home'\n                                disableRipple={true}>\n                                <Link\n                                    className={tabButton}\n                                    to='home'\n                                    smooth='easeInOutQuart'>\n                                    home\n                                </Link>\n                            </ButtonBase>\n                            {getTabs()}\n                        </ul>\n                    </nav>\n                </div>\n\n            </Box>\n        );\n    }\n\n    return (\n        <React.Fragment>\n            {main()}\n        </React.Fragment>\n    );\n}\n\nexport default Home\n","import React from 'react'\nimport { makeStyles, Box, Typography, Divider, Container, Grid } from '@material-ui/core'\n\nconst useStyles = makeStyles(() => ({\n    skillBox: {\n        // justifyContent: 'center',\n        flexDirection: 'column',\n        alignItems: 'center',\n        height: '100vh',\n        minHeight: 750,\n        maxHeight: 1000,\n        minWidth: 750,\n        backgroundColor: '#efefef'\n        // position: 'relative',\n    },\n    title: {\n        padding: 15,\n        paddingBottom: 0,\n        paddingTop: 75\n    },\n    divider: {\n        backgroundColor: '#A6B1E1',\n        width: '15%',\n        margin: 10,\n        height: 3\n    },\n    skillItem: {\n        textAlign: 'center',\n        padding: 20,\n        fontWeight: 'bold'\n    },\n    container: {\n        // padding: 20\n    },\n    mainGrid: {\n        paddingTop: 75,\n    },\n    skillTitle: {\n        textAlign: 'center',\n        paddingTop: 75\n    },\n    otherGrid: {\n        paddingTop: 75,\n        paddingLeft: 100,\n        paddingRight: 100\n    }\n}));\n\nconst Skills = () => {\n    const { skillBox, title, divider, skillItem, container, mainGrid, skillTitle, otherGrid } = useStyles();\n\n    const skillPage = () => {\n        return (\n            <Box display='flex' className={skillBox} id='skills'>\n                <Typography variant='h2' className={title}>skills</Typography>\n                <Divider className={divider} />\n                <Container className={container}>\n                    <Grid container spacing={5} justify='space-around' className={mainGrid}>\n                        <Grid item xs>\n                        <Typography variant='h5' className={skillItem}>Java</Typography>\n                        </Grid>\n                        <Grid item xs>\n                        <Typography variant='h5' className={skillItem}>Python</Typography>\n                        </Grid>\n                        <Grid item xs>\n                        <Typography variant='h5' className={skillItem}>ReactJS</Typography>\n                        </Grid>\n                        <Grid item xs>\n                        <Typography variant='h5' className={skillItem}>JavaScript</Typography>\n                        </Grid>\n                        <Grid item xs>\n                        <Typography variant='h5' className={skillItem}>C++</Typography>\n                        </Grid>\n                    </Grid>\n                    <Typography variant='h3' className={skillTitle}>other</Typography>\n                    <Grid container spacing={2} justify='space-around' className={otherGrid}>\n                        <Grid item xs={3}>\n                        <ul>\n                            <li><Typography>C</Typography></li>\n                            <li><Typography>HTML/CSS</Typography></li>\n                            <li><Typography>SQL</Typography></li>\n                            <li><Typography>R</Typography></li>\n                            <li><Typography>TypeScript</Typography></li>\n                            <li><Typography>PHP</Typography></li>\n                        </ul>\n                        </Grid>\n                        <Grid item xs={3}>\n                        <ul>\n                            <li><Typography>Angular</Typography></li>\n                            <li><Typography>VueJS</Typography></li>\n                            <li><Typography>Django</Typography></li>\n                            <li><Typography>MongoDB</Typography></li>\n                            <li><Typography>NodeJS</Typography></li>\n                            <li><Typography>Laravel</Typography></li>\n                            <li><Typography>Express</Typography></li>\n                            <li><Typography>Bootstrap</Typography></li>\n                        </ul>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </Box>\n        )\n    }\n\n    return (\n        <React.Fragment>\n            {skillPage()}\n        </React.Fragment>\n    );\n}\n\nexport default Skills","export default __webpack_public_path__ + \"static/media/purdue.afdb2b76.svg\";","export default __webpack_public_path__ + \"static/media/MatthewLi-r.2c1cb017.pdf\";","import React from 'react'\nimport { makeStyles, Box, Typography, Divider, Container, Grid, IconButton, Button } from '@material-ui/core'\nimport purdueImage from './media/purdue.svg';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport EmailRoundedIcon from '@material-ui/icons/EmailRounded';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport viewResume from './media/MatthewLi-r.pdf'\nimport DescriptionRoundedIcon from '@material-ui/icons/DescriptionRounded';\n\nconst useStyles = makeStyles(() => ({\n    aboutBox: {\n        // justifyContent: 'center',\n        flexDirection: 'column',\n        alignItems: 'center',\n        height: '100vh',\n        backgroundColor: 'white',\n        minHeight: 750,\n        maxHeight: 1000,\n        minWidth: 750\n        // position: 'relative',\n    },\n    title: {\n        padding: 15,\n        paddingBottom: 0,\n        paddingTop: 75\n    },\n    divider: {\n        backgroundColor: '#A6B1E1',\n        width: '15%',\n        margin: 10,\n        height: 3\n    },\n    gridTitle: {\n        textAlign: 'center',\n        padding: 20\n    },\n    container: {\n        // padding: 20,\n        // paddingLeft: 100,\n        // paddingRight: 100\n    },\n    grid: {\n        paddingTop: 75\n    },\n    image: {\n        paddingTop: 50,\n    },\n    links: {\n        \"&:hover\": {\n            backgroundColor: \"transparent\"\n        },\n        marginTop: 20,\n    },\n    resume: {\n        marginTop: 20,\n        marginRight: 12,\n    }\n}));\n\nconst About = () => {\n    const { aboutBox, title, divider, gridTitle, container, grid, image, links, resume } = useStyles();\n\n    const aboutPage = () => {\n        return (\n            <Box display='flex' className={aboutBox} id='about'>\n                <Typography variant='h2' className={title}>about</Typography>\n                <Divider className={divider} />\n                <Container className={container}>\n                    <Grid container spacing={2} justify='space-around' className={grid}>\n                        <Grid item xs={4}>\n                            <Typography variant='h4' className={gridTitle}>me</Typography>\n                            <Typography variant='h6'>\n                                Hi, my name is Matthew Li and I am an experienced Full Stack Web Developer.\n                                I am also passionate about learning a variety of technologies and creating software and tools to help people.\n                            </Typography>\n                            <Button\n                                className={resume}\n                                variant=\"outlined\"\n                                color=\"secondary\"\n                                size=\"medium\"\n                                startIcon={<DescriptionRoundedIcon />}\n                                href={viewResume}\n                                target='_blank'\n                            >\n                                view resume\n                            </Button>\n                            {/* <br></br> */}\n                            <IconButton\n                            className={links}\n                            disableRipple\n                            href='mailto:mtthw.li7@gmail.com'\n                            target='_blank'\n                            >\n                                <EmailRoundedIcon\n                                    color='secondary'\n                                    fontSize='default'\n                                />\n                            </IconButton>\n                            <IconButton\n                            className={links}\n                            disableRipple\n                            href='https://www.linkedin.com/in/li-matthew/'\n                            target='_blank'\n                            >\n                                <LinkedInIcon\n                                    color='secondary'\n                                    fontSize='default'\n                                />\n                            </IconButton>\n                            <IconButton\n                            className={links}\n                            disableRipple\n                            href='https://github.com/li-matthew'\n                            target='_blank'\n                            >\n                                <GitHubIcon\n                                    color='secondary'\n                                    fontSize='default'\n                                />\n                            </IconButton>\n                        </Grid>\n                        <Grid item xs={4}>\n                            <Typography variant='h4' className={gridTitle}>education</Typography>\n                            <Typography variant='h6'>\n                                Purdue University<br></br>\n                                West Lafayette, Indiana<br></br>\n                                B.S. in Computer Science, Data Science<br></br>\n                                August 2018 - December 2021\n                            </Typography>\n                            <img src={purdueImage} className={image} />\n                        </Grid>\n                    </Grid>\n                </Container>\n            </Box>\n        )\n    }\n\n    return (\n        <React.Fragment>\n            {aboutPage()}\n        </React.Fragment>\n    );\n}\n\nexport default About","export default __webpack_public_path__ + \"static/media/sandwichtime.25161d45.png\";","export default __webpack_public_path__ + \"static/media/schedule.6a22064a.png\";","export default __webpack_public_path__ + \"static/media/spotify.e26e090d.png\";","export default __webpack_public_path__ + \"static/media/todo.91396fec.png\";","import React from 'react'\nimport {\n    makeStyles, Box, Typography, Divider, Container, Grid,\n    Card, CardMedia, CardActions, CardContent, Button, IconButton,\n    Dialog, DialogTitle, DialogContent, DialogActions\n} from '@material-ui/core'\nimport sandwichtime from './media/sandwichtime.png'\nimport schedule from './media/schedule.png'\nimport spotify from './media/spotify.png'\nimport todo from './media/todo.png'\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nconst useStyles = makeStyles(() => ({\n    projectBox: {\n        // justifyContent: 'center',\n        flexDirection: 'column',\n        alignItems: 'center',\n        height: '100vh',\n        backgroundColor: 'white',\n        minHeight: 750,\n        maxHeight: 1000,\n        minWidth: 750\n        // position: 'relative',\n    },\n    title: {\n        padding: 15,\n        paddingBottom: 0,\n        paddingTop: 75\n    },\n    divider: {\n        backgroundColor: '#A6B1E1',\n        width: '15%',\n        margin: 10,\n        height: 3\n    },\n    container: {\n        // padding: 20,\n        // paddingLeft: 100,\n        // paddingRight: 100\n    },\n    grid: {\n        paddingTop: 75,\n        overflow: 'hidden'\n    },\n    cardImage: {\n        height: 200,\n        '@media (max-width: 1000px)': {\n            height: 'max-width'\n        },\n    },\n    links: {\n        float: 'right',\n        \"&:hover\": {\n            backgroundColor: \"transparent\"\n        }\n    },\n    dialogImage: {\n        width: 500,\n        display: 'block',\n        margin: 'auto',\n        paddingBottom: 16\n    }\n}));\n\nconst Projects = () => {\n    const { projectBox, title, divider, container, grid, cardImage, links, dialogImage } = useStyles();\n    const [projectOne, setProjectOne] = React.useState(false);\n    const [projectTwo, setProjectTwo] = React.useState(false);\n    const [projectThree, setProjectThree] = React.useState(false);\n    const [projectFour, setProjectFour] = React.useState(false);\n\n    const handleClose = () => {\n        setProjectOne(false)\n        setProjectTwo(false)\n        setProjectThree(false)\n        setProjectFour(false)\n    };\n\n    const handleProjectOne = () => {\n        setProjectOne(true)\n    }\n    const handleProjectTwo = () => {\n        setProjectTwo(true)\n    }\n    const handleProjectThree = () => {\n        setProjectThree(true)\n    }\n    const handleProjectFour = () => {\n        setProjectFour(true)\n    }\n\n    const projectPage = () => {\n        return (\n            <Box display='flex' className={projectBox} id='projects'>\n                <Typography variant='h2' className={title}>projects</Typography>\n                <Divider className={divider} />\n                <Container className={container}>\n                    <Grid container spacing={4} justify='space-around' className={grid} alignItems='center'>\n                        <Grid item xs>\n                            <Card variant='outlined'>\n                                <CardMedia\n                                    className={cardImage}\n                                    image={sandwichtime}\n                                />\n                                <CardContent>\n                                    <Typography gutterBottom variant=\"h4\">\n                                        sandwich time\n                                    </Typography>\n                                    {/* <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                        An app that takes microphone input and converts it into an audio visualization\n                                        <br></br>\n                                        <br></br>\n                                        </Typography> */}\n                                    <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\n                                        ReactJS <span>&#8226;</span> WebAudio API\n                                    </Typography>\n                                </CardContent>\n                                <CardActions>\n                                    <Button size=\"medium\" color=\"secondary\" variant='outlined' onClick={handleProjectOne}>\n                                        learn more\n                                    </Button>\n                                    {/* <Button size=\"medium\" color=\"secondary\" variant='outlined' href='https://li-matthew.github.io/visualizer/' target='_blank'>\n                                        view\n                                    </Button> */}\n                                    <IconButton\n                                        className={links}\n                                        disableRipple\n                                        href='https://github.com/li-matthew/visualizer'\n                                        target='_blank'\n                                    >\n                                        <GitHubIcon\n                                            color='secondary'\n                                            fontSize='default'\n                                        />\n                                    </IconButton>\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                        <Grid item xs>\n                            <Card variant='outlined'>\n                                <CardMedia\n                                    className={cardImage}\n                                    image={schedule}\n                                />\n                                <CardContent>\n                                    <Typography gutterBottom variant=\"h4\">\n                                        scheduling system\n                                    </Typography>\n                                    {/* <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                        An app that takes microphone input and converts it into an audio visualization\n                                        <br></br>\n                                        <br></br>\n                                        </Typography> */}\n                                    <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\n                                        ExpressJS <span>&#8226;</span> HTML/CSS <span>&#8226;</span> SQL\n                                    </Typography>\n                                </CardContent>\n                                <CardActions>\n                                    <Button size=\"medium\" color=\"secondary\" variant='outlined' onClick={handleProjectTwo}>\n                                        learn more\n                                    </Button>\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                        <Grid item xs>\n                            <Card variant='outlined'>\n                                <CardMedia\n                                    className={cardImage}\n                                    image={spotify}\n                                />\n                                <CardContent>\n                                    <Typography gutterBottom variant=\"h4\">\n                                        spotify classification\n                                    </Typography>\n                                    {/* <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                        An app that takes microphone input and converts it into an audio visualization\n                                        <br></br>\n                                        <br></br>\n                                        </Typography> */}\n                                    <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\n                                        Python <span>&#8226;</span> scikit-learn <span>&#8226;</span> pandas <span>&#8226;</span> R <span>&#8226;</span> Spotify API\n                                    </Typography>\n                                </CardContent>\n                                <CardActions>\n                                    <Button size=\"medium\" color=\"secondary\" variant='outlined' onClick={handleProjectThree}>\n                                        learn more\n                                    </Button>\n                                    <IconButton\n                                        className={links}\n                                        disableRipple\n                                        href='https://github.com/li-matthew/SpotifyProject'\n                                        target='_blank'\n                                    >\n                                        <GitHubIcon\n                                            color='secondary'\n                                            fontSize='default'\n                                        />\n                                    </IconButton>\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                        <Grid item xs>\n                            <Card variant='outlined'>\n                                <CardMedia\n                                    className={cardImage}\n                                    image={todo}\n                                />\n                                <CardContent>\n                                    <Typography gutterBottom variant=\"h4\">\n                                        task tracker\n                                    </Typography>\n                                    {/* <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                        An app that takes microphone input and converts it into an audio visualization\n                                        <br></br>\n                                        <br></br>\n                                        </Typography> */}\n                                    <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\n                                        Python <span>&#8226;</span> Django <span>&#8226;</span> Bootstrap\n                                    </Typography>\n                                </CardContent>\n                                <CardActions>\n                                    <Button size=\"medium\" color=\"secondary\" variant='outlined' onClick={handleProjectFour}>\n                                        learn more\n                                    </Button>\n                                    <IconButton\n                                        className={links}\n                                        disableRipple\n                                        href='https://github.com/li-matthew/todoapp'\n                                        target='_blank'\n                                    >\n                                        <GitHubIcon\n                                            color='secondary'\n                                            fontSize='default'\n                                        />\n                                    </IconButton>\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                    </Grid>\n                    <Dialog onClose={handleClose} open={projectOne} maxWidth='sm'>\n                        <DialogTitle onClose={handleClose}>\n                            <Typography variant=\"h4\">\n                                sandwich time\n                            </Typography>\n                        </DialogTitle>\n                        <DialogContent>\n                            <img src={sandwichtime} className={dialogImage} />\n                            <Typography gutterBottom>\n                                A web application to visualize audio data received from the microphone.\n                                It also includes three different visualization styles with a variety of controls to customize the experience.\n                            </Typography>\n                            <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\n                                ExpressJS <span>&#8226;</span> HTML/CSS <span>&#8226;</span> SQL\n                            </Typography>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button variant='outlined' onClick={handleClose} color='secondary'>\n                                close\n                            </Button>\n                            <IconButton\n                                className={links}\n                                disableRipple\n                                href='https://github.com/li-matthew/visualizer'\n                                target='_blank'\n                            >\n                                <GitHubIcon\n                                    color='secondary'\n                                    fontSize='default'\n                                />\n                            </IconButton>\n                        </DialogActions>\n                    </Dialog>\n                    <Dialog onClose={handleClose} open={projectTwo} maxWidth='sm'>\n                        <DialogTitle onClose={handleClose}>\n                            <Typography variant=\"h4\">\n                                scheduling system\n                            </Typography>\n                        </DialogTitle>\n                        <DialogContent>\n                            <img src={schedule} className={dialogImage} />\n                            <Typography gutterBottom>\n                                A web application for professors, TAs, and students to schedule help sessions based on enrolled courses.\n                                Professors can add courses and help sessions for those courses as well as assign TAs to those sessions.\n                                Students can sign up for available help sessions for their enrolled courses.\n                            </Typography>\n                            <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\n                                ExpressJS <span>&#8226;</span> HTML/CSS <span>&#8226;</span> SQL\n                            </Typography>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button variant='outlined' onClick={handleClose} color='secondary'>\n                                close\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                    <Dialog onClose={handleClose} open={projectThree} maxWidth='sm'>\n                        <DialogTitle onClose={handleClose}>\n                            <Typography variant=\"h4\">\n                                spotify classification\n                            </Typography>\n                        </DialogTitle>\n                        <DialogContent>\n                            <img src={spotify} className={dialogImage} />\n                            <Typography gutterBottom>\n                                A program that collects all tracks from your Spotify playlists and gets corresponding feature data from the Spotify API.\n                                Uses PCA and k-means to cluster them into different playlists based on said data.\n                                New tracks added to a specified playlist will be automatically classified and added to the correct cluster playlist.\n                            </Typography>\n                            <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\n                                Python <span>&#8226;</span> scikit-learn <span>&#8226;</span> pandas <span>&#8226;</span> R <span>&#8226;</span> Spotify API\n                            </Typography>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button variant='outlined' onClick={handleClose} color='secondary'>\n                                close\n                            </Button>\n                            <IconButton\n                                className={links}\n                                disableRipple\n                                href='https://github.com/li-matthew/SpotifyProject'\n                                target='_blank'\n                            >\n                                <GitHubIcon\n                                    color='secondary'\n                                    fontSize='default'\n                                />\n                            </IconButton>\n                        </DialogActions>\n                    </Dialog>\n                    <Dialog onClose={handleClose} open={projectFour} maxWidth='sm'>\n                        <DialogTitle onClose={handleClose}>\n                            <Typography variant=\"h4\">\n                                task tracker\n                            </Typography>\n                        </DialogTitle>\n                        <DialogContent>\n                            <img src={todo} className={dialogImage} />\n                            <Typography gutterBottom>\n                                A to-do list application that keeps track of added tasks including due dates. Tasks can be added with a description, category and due date.\n                                Once added, they can either be deleted or marked as complete.\n                            </Typography>\n                            <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\n                                Python <span>&#8226;</span> Django <span>&#8226;</span> Bootstrap\n                            </Typography>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button variant='outlined' onClick={handleClose} color='secondary'>\n                                close\n                            </Button>\n                            <IconButton\n                                className={links}\n                                disableRipple\n                                href='https://github.com/li-matthew/todoapp'\n                                target='_blank'\n                            >\n                                <GitHubIcon\n                                    color='secondary'\n                                    fontSize='default'\n                                />\n                            </IconButton>\n                        </DialogActions>\n                    </Dialog>\n                </Container>\n            </Box>\n        )\n    }\n\n    return (\n        <React.Fragment>\n            {projectPage()}\n        </React.Fragment>\n    );\n}\n\nexport default Projects","import React from 'react'\nimport { makeStyles, Box, Typography, Divider, Container, Grid } from '@material-ui/core'\n\nconst useStyles = makeStyles(() => ({\n    interestBox: {\n        // justifyContent: 'center',\n        flexDirection: 'column',\n        alignItems: 'center',\n        height: '100vh',\n        minHeight: 750,\n        maxHeight: 1000,\n        minWidth: 750,\n        backgroundColor: '#efefef'\n        // position: 'relative',\n    },\n    title: {\n        padding: 15,\n        paddingBottom: 0,\n        paddingTop: 75\n    },\n    divider: {\n        backgroundColor: '#A6B1E1',\n        width: '15%',\n        margin: 10,\n        height: 3\n    },\n    container: {\n        // padding: 20\n    },\n    grid: {\n        paddingTop: 75\n    },\n    gridTitle: {\n        textAlign: 'center',\n        padding: 20\n    },\n}));\n\nconst Interests = () => {\n    const { interestBox, title, divider, container, grid, gridTitle } = useStyles();\n\n    const interestPage = () => {\n        return (\n            <Box display='flex' className={interestBox} id='interests'>\n                <Typography variant='h2' className={title}>interests</Typography>\n                <Divider className={divider} />\n                <Container className={container}>\n                <Grid container spacing={2} justify='space-around' className={grid}>\n                        <Grid item xs={4}>\n                            <Typography variant='h4' className={gridTitle}>music</Typography>\n                            <Typography variant='h6'>\n                                In my free time I enjoy simply listening to music to relax. \n                                Sometimes I will even try producing my own music to share with friends.\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={4}>\n                            <Typography variant='h4' className={gridTitle}>basketball</Typography>\n                            <Typography variant='h6'>\n                                Since I was younger, I have always been an avid basketball fan and found myself playing the sport whenever I could.\n                                Nowadays, I still play occasionally with friends, as well as watch my favorite basketball team play in the NBA.\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </Box>\n        )\n    }\n\n    return (\n        <React.Fragment>\n            {interestPage()}\n        </React.Fragment>\n    );\n}\n\nexport default Interests","import React from 'react'\nimport { makeStyles, Box, Typography, Divider, Container, TextField, Button, Snackbar, SnackbarContent, Grow } from '@material-ui/core'\n\nconst useStyles = makeStyles(() => ({\n    contactBox: {\n        // justifyContent: 'center',\n        flexDirection: 'column',\n        alignItems: 'center',\n        height: '100vh',\n        minHeight: 750,\n        maxHeight: 1000,\n        minWidth: 750,\n        // position: 'relative',\n    },\n    title: {\n        padding: 15,\n        paddingBottom: 0,\n        paddingTop: 75,\n        color: 'white'\n    },\n    divider: {\n        backgroundColor: '#A6B1E1',\n        width: '15%',\n        margin: 10,\n        height: 3\n    },\n    container: {\n        textAlign: 'center'\n    },\n    contactForm: {\n        width: '50%',\n        margin: 'auto',\n        paddingTop: 75,\n        transition: '0.5s'\n    },\n    submit: {\n        marginTop: 20\n    },\n    input: {\n        color: 'white'\n    },\n    snack: {\n        backgroundColor: '#A6B1E1',\n        color: 'black',\n        boxShadow: 'none',\n        \n    }\n}));\n\nconst Contact = () => {\n    const { contactBox, title, divider, container, contactForm,\n        submit, input, snack } = useStyles();\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleSubmit = () => {\n        setOpen(true);\n    }\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpen(false);\n    };\n\n    const contactPage = () => {\n        return (\n            <Box display='flex' className={contactBox} id='contact' bgcolor='primary.main'>\n                <Typography variant='h2' className={title}>contact</Typography>\n                <Divider className={divider} />\n                <Container className={container}>\n                    <form className={contactForm}>\n                        <div>\n                            <TextField\n                                fullWidth\n                                required\n                                margin='normal'\n                                variant='outlined'\n                                label='name'\n                                color='secondary'\n                                InputProps={{\n                                    className: input\n                                }}\n                            />\n                            <TextField\n                                fullWidth\n                                required\n                                margin='normal'\n                                variant='outlined'\n                                label='email'\n                                color='secondary'\n                                InputProps={{\n                                    className: input\n                                }}\n                            />\n                            <TextField\n                                fullWidth\n                                required\n                                margin='normal'\n                                variant='outlined'\n                                label='message'\n                                color='secondary'\n                                multiline\n                                rows={4}\n                                InputProps={{\n                                    className: input\n                                }}\n                            />\n                        </div>\n                        <Button\n                            className={submit}\n                            size='large'\n                            variant='outlined'\n                            type='reset'\n                            color='secondary'\n                            onClick={handleSubmit}\n                        >\n                            submit\n                        </Button>\n                        <Snackbar\n                            anchorOrigin={{\n                                vertical: 'bottom',\n                                horizontal: 'center',\n                            }}\n                            open={open}\n                            autoHideDuration={6000}\n                            onClose={handleClose}\n                            TransitionComponent={Grow}\n                        >\n                            <SnackbarContent\n                            message=\"Message Submitted\"\n                            className={snack}\n                            />\n                        </Snackbar>\n                    </form>\n                </Container>\n            </Box>\n        )\n    }\n\n    return (\n        <React.Fragment>\n            {contactPage()}\n        </React.Fragment>\n    );\n}\n\nexport default Contact","import './App.css';\nimport Home from './Home'\nimport Skills from './Skills'\nimport About from './About'\nimport Projects from './Projects'\nimport Interests from './Interests'\nimport Contact from './Contact'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#424874'\n    },\n    secondary: {\n      main: '#A6B1E1',\n    },\n  },\n  typography: {\n    fontFamily: 'Nunito'\n  },\n  overrides: {\n    MuiButton: {\n      root: {\n        textTransform: 'none',\n      },\n    },\n    MuiTextField: {\n      root: {\n        \n        '& label.Mui-focused': {\n          color: 'white',\n        },\n        '& .MuiOutlinedInput-root': {\n          \n          '& fieldset': {\n            transition: '0.5s',\n            borderColor: '#A6B1E1',\n          },\n          '&:hover fieldset': {\n            borderColor: 'white',\n          },\n          '&.Mui-focused fieldset': {\n            borderColor: 'white',\n            borderWidth: 1\n          },\n        },\n      },\n    },\n    MuiInputLabel: {\n      root: {\n        color: \"#A6B1E1\",\n      },\n    },\n    MuiSnackbarContent: {\n      root: {\n        justifyContent: 'center',\n      }\n    },\n    MuiDialogActions: {\n      root: {\n        justifyContent: 'left',\n        paddingLeft: 24\n      }\n    },\n    MuiCard: {\n      root: {\n        borderColor: '#A6B1E1',\n      }\n    },\n  }\n})\n\nconst App = (props) => {\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        {/* <Header /> */}\n        <Home />\n        <About />\n        <Skills />\n        <Projects />\n        <Interests />\n        <Contact />\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}